TODO: A REVOIR (notamment les config et secrets)
---
# Deployment Keycloak
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:23.0
          args:
            - "start"
            - "--optimized"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 9000
              protocol: TCP
          env:
            # Configuration depuis ConfigMap
            - name: KC_DB
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_DB
            - name: KC_DB_URL_HOST
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_DB_URL_HOST
            - name: KC_DB_URL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_DB_URL_DATABASE
            - name: KC_DB_URL_PORT
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_DB_URL_PORT
            - name: KC_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_HOSTNAME
            - name: KC_HOSTNAME_STRICT
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_HOSTNAME_STRICT
            - name: KC_HOSTNAME_STRICT_HTTPS
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_HOSTNAME_STRICT_HTTPS
            - name: KC_HTTP_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_HTTP_ENABLED
            - name: KC_PROXY
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_PROXY
            - name: KC_HEALTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_HEALTH_ENABLED
            - name: KC_METRICS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: keycloak-config
                  key: KC_METRICS_ENABLED

            # Credentials de base de données
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-secret
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-secret
                  key: POSTGRES_PASSWORD

            # Credentials admin
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: KEYCLOAK_ADMIN
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: KEYCLOAK_ADMIN_PASSWORD

          # Health checks
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30

          # Ressources
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"

          # Sécurité
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault